<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }} | My Recipe Collection</title>
    <link rel="stylesheet" href="{{ '/css/style.css' | url }}">
</head>
<body>
    <header class="site-header">
        <nav class="nav">
            <a href="{{ '/' | url }}" class="nav-logo">Recipes</a>
            <div class="nav-right">
                {% if layout == "layouts/recipe.njk" %}
                <button class="screen-toggle-btn" id="screenToggle" aria-label="Keep screen on" title="Keep screen on">
                    <svg class="screen-icon screen-off" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <!-- Eye closed (screen sleep) -->
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5z" opacity="0.3"/>
                        <path d="M2 2L22 22" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                    </svg>
                    <svg class="screen-icon screen-on" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <!-- Eye open (screen awake) -->
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5z"/>
                        <circle cx="12" cy="12" r="3" fill="white"/>
                    </svg>
                </button>
                {% endif %}
                <button class="menu-toggle" id="menu-toggle" aria-label="Menu">
                    <span></span>
                    <span></span>
                    <span></span>
                </button>
            </div>
            <div class="nav-links" id="nav-links">
                <a href="{{ '/' | url }}">All Recipes</a>
                <a href="{{ '/shopping-list' | url }}" class="shopping-list-link">
                    Shopping List
                    <span class="shopping-count" id="shopping-count"></span>
                </a>
                {% if layout == "layouts/recipe.njk" %}
                <button class="screen-toggle-btn desktop-only" id="screenToggleDesktop" aria-label="Keep screen on" title="Keep screen on">
                    <svg class="screen-icon screen-off" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <!-- Eye closed (screen sleep) -->
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5z" opacity="0.3"/>
                        <path d="M2 2L22 22" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                    </svg>
                    <svg class="screen-icon screen-on" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <!-- Eye open (screen awake) -->
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5z"/>
                        <circle cx="12" cy="12" r="3" fill="white"/>
                    </svg>
                </button>
                {% endif %}
            </div>
        </nav>
    </header>

    <main class="main-content">
        {{ content | safe }}
    </main>

    <footer class="site-footer">
        <p>&copy; 2025 My Recipe Collection</p>
    </footer>

    <script>
    // Hamburger menu toggle
    document.addEventListener('DOMContentLoaded', function() {
        const menuToggle = document.getElementById('menu-toggle');
        const navLinks = document.getElementById('nav-links');

        if (menuToggle) {
            menuToggle.addEventListener('click', function() {
                navLinks.classList.toggle('active');
            });

            // Close menu when clicking outside
            document.addEventListener('click', function(event) {
                if (!menuToggle.contains(event.target) && !navLinks.contains(event.target)) {
                    navLinks.classList.remove('active');
                }
            });

            // Close menu when clicking a link
            navLinks.querySelectorAll('a').forEach(link => {
                link.addEventListener('click', () => {
                    navLinks.classList.remove('active');
                });
            });
        }
    });

    // Update shopping list count in navigation
    function updateShoppingCount() {
        const list = JSON.parse(localStorage.getItem('shoppingList') || '{}');
        const count = Object.keys(list).length;
        const countElement = document.getElementById('shopping-count');

        if (countElement) {
            if (count > 0) {
                countElement.textContent = count;
                countElement.style.display = 'inline-flex';
            } else {
                countElement.style.display = 'none';
            }
        }
    }

    // Update count on page load
    document.addEventListener('DOMContentLoaded', updateShoppingCount);

    // Listen for storage changes (updates from other tabs)
    window.addEventListener('storage', (e) => {
        if (e.key === 'shoppingList') {
            updateShoppingCount();
        }
    });
    </script>
</body>
</html>